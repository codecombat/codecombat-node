/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as CodeCombat from "../../api";
import * as core from "../../core";

export const UserResponse: core.serialization.ObjectSchema<serializers.UserResponse.Raw, CodeCombat.UserResponse> =
    core.serialization.object({
        id: core.serialization.property(
            "_id",
            core.serialization.lazy(async () => (await import("..")).ObjectIdString).optional()
        ),
        email: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        slug: core.serialization.string().optional(),
        role: core.serialization.lazy(async () => (await import("..")).RoleString).optional(),
        stats: core.serialization.lazyObject(async () => (await import("..")).UserResponseStats).optional(),
        oAuthIdentities: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).UserResponseOAuthIdentitiesItem))
            .optional(),
        subscription: core.serialization
            .lazyObject(async () => (await import("..")).UserResponseSubscription)
            .optional(),
        license: core.serialization.lazyObject(async () => (await import("..")).UserResponseLicense).optional(),
    });

export declare namespace UserResponse {
    interface Raw {
        _id?: serializers.ObjectIdString.Raw | null;
        email?: string | null;
        name?: string | null;
        slug?: string | null;
        role?: serializers.RoleString.Raw | null;
        stats?: serializers.UserResponseStats.Raw | null;
        oAuthIdentities?: serializers.UserResponseOAuthIdentitiesItem.Raw[] | null;
        subscription?: serializers.UserResponseSubscription.Raw | null;
        license?: serializers.UserResponseLicense.Raw | null;
    }
}
